!function(){"use strict";angular.module("app",["applicat.push.service","ionic","ngCordova","ngResource","ngTemplates","ngStorage"]).run(["$ionicPlatform","$rootScope","$stateParams","$state","AuthService","$window","$ionicHistory","$ionicSideMenuDelegate","Message","$timeout","PushService","gpsService","appStorage",function($ionicPlatform,$rootScope,$stateParams,$state,AuthService,$window,$ionicHistory,$ionicSideMenuDelegate,Message,$timeout,PushService,gpsService,appStorage){function areStates(states){return-1!==states.indexOf($ionicHistory.currentStateName())}$rootScope.goBack=function(){$ionicHistory.goBack()},$rootScope.appStorage=appStorage,$rootScope.isState=function(state){return state===$ionicHistory.currentStateName()},$rootScope.isParam=function(paramObj){for(var key in paramObj){var value=paramObj[key];if($stateParams[key]===value)return!0}return!1},$rootScope.goToState=function(state,params){$ionicSideMenuDelegate.toggleLeft(!1),$state.go(state,params)},$rootScope.loading=function(){Message.loading(),$timeout(function(){Message.hide()},2e3)},$rootScope.$on("$stateChangeStart",function(){Message.loading()}),$rootScope.$on("$stateChangeSuccess",function(){Message.hide()}),$ionicPlatform.ready(function(){$window.cordova&&$window.cordova.plugins.Keyboard&&($window.cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),$state.go("main.home.theme"),PushService.registerDevice()),$window.StatusBar&&$window.StatusBar.styleDefault(),$window.cordova&&(gpsService.checkGPS(),$state.go("main.home.theme")),$ionicPlatform.registerBackButtonAction(function(e){return e.preventDefault(),areStates(["main.detail"])?(appStorage.isBackViewDetail=!0,$ionicHistory.goBack()):areStates(["main.place.list"])?void $state.go("main.home.theme"):void $ionicHistory.goBack()},101)})}]).config(["$stateProvider","$httpProvider","$ionicConfigProvider",function($stateProvider,$httpProvider,$ionicConfigProvider){$httpProvider.interceptors.push("AuthInterceptor"),$stateProvider.state("main.admin",{url:"/admin",views:{main:{templateUrl:"state/admin/admin.html",controller:"AdminController as Admin"}}}).state("adminMenu",{url:"/adminMenu",templateUrl:"state/adminMenu/adminMenu.html",controller:"AdminMenuController as AdminMenu"}).state("login",{url:"/login",templateUrl:"state/login/login.html",controller:"LoginController as Login"}).state("signup",{url:"/signup",templateUrl:"state/signup/signup.html",controller:"SignupController as Signup"}).state("eventRegister",{url:"/eventRegister/:id",templateUrl:"state/eventRegister/eventRegister.html",controller:"EventRegisterController as EventRegister"}).state("main.daumMap",{url:"/daumMap/:id",views:{main:{templateUrl:"state/daumMap/daumMap.html",controller:"DaumMapController as Map"}}}).state("main",{url:"/main",templateUrl:"state/main/main.html",controller:"MainController as Main"}).state("main.home",{url:"/home",views:{main:{templateUrl:"state/mainHome/home.html",controller:"HomeController as Home"}}}).state("main.home.theme",{url:"/theme",views:{home:{templateUrl:"state/mainHomeTheme/theme.html",controller:"ThemeController as Theme"}}}).state("main.home.type",{url:"/type",views:{home:{templateUrl:"state/mainHomeType/type.html",controller:"TypeController as Type"}}}).state("main.home.location",{url:"/location",views:{home:{templateUrl:"state/mainHomeLocation/location.html",controller:"LocationController as Location"}}}).state("main.detail",{url:"/detail/:id",views:{main:{templateUrl:"state/mainPlaceDetail/detail.html",controller:"DetailController as Detail"}}}).state("main.event",{url:"/event",views:{main:{templateUrl:"state/mainEvent/event.html",controller:"EventController as Event"}}}).state("main.event.list",{url:"/list/:eventType",views:{event:{templateUrl:"state/mainEventList/list.html",controller:"EventListController as EventList"}}}).state("main.eventDetail",{url:"/eventDetail/:id",views:{main:{templateUrl:"state/mainEventDetail/eventDetail.html",controller:"EventDetailController as EventDetail"}}}).state("main.place",{url:"/place/:category",views:{main:{templateUrl:"state/mainPlace/place.html"}}}).state("main.place.list",{url:"/:from/list",views:{place:{templateUrl:"state/mainPlaceList/placeList.html",controller:"PlaceListController as PlaceList"}}}).state("placeSearch",{url:"/placeSearch",templateUrl:"state/placeSearch/placeSearch.html",controller:"PlaceSearchController as PlaceSearch"}).state("main.noticeList",{url:"/noticeList",views:{main:{templateUrl:"state/mainNoticeList/noticeList.html",controller:"NoticeListController as NoticeList"}}}).state("main.noticeDetail",{url:"/noticeDetail/:id",views:{main:{templateUrl:"state/mainNoticeDetail/noticeDetail.html",controller:"NoticeDetailController as NoticeDetail"}}}).state("main.association",{url:"/association",views:{main:{templateUrl:"state/mainAssociation/association.html",controller:"AssociationController as Association"}}}).state("main.contract",{url:"/contract",views:{main:{templateUrl:"state/mainContract/contract.html"}}}).state("main.customer",{url:"/customer",views:{main:{templateUrl:"state/mainCustomer/customer.html",controller:"CustomerController as Customer"}}})}])}(),function(){"use strict";function daum($window){return $window.daum?$window.daum:void 0}angular.module("app").factory("daum",daum),daum.$inject=["$window"]}(),function(){"use strict";function geolib($window){return $window.geolib}angular.module("app").factory("geolib",geolib),geolib.$inject=["$window"]}(),function(){"use strict";function localStorage($window){return $window.localStorage?$window.localStorage:void 0}angular.module("app").factory("localStorage",localStorage),localStorage.$inject=["$window"]}(),function(){"use strict";function moment($window){return $window.moment}angular.module("app").factory("moment",moment),moment.$inject=["$window"]}(),function(){"use strict";function _($window){return $window._?$window._:void 0}angular.module("app").factory("_",_),_.$inject=["$window"]}(),function(){"use strict";angular.module("app").constant("governorUrl","http://hungers.applicat.co.kr").constant("appName","hungers").constant("googlePushSenderID","774642871236").constant("kakaoKey","bdb254de02ea0b7521635ba469608674").constant("facebookKey","801820753200919")}(),function(){"use strict";function PushService($http,$log,$q,$cordovaDialogs,$window,$timeout,$rootScope,$cordovaMedia,googlePushSenderID,governorUrl){function registerDevice(){var push=$window.PushNotification.init({android:{senderID:googlePushSenderID},ios:{badge:!0,sound:"true",alert:"true"}});ionic.Platform.isIOS()&&push.getApplicationIconBadgeNumber(function(n){push.setApplicationIconBadgeNumber(function(){},function(){},n)},function(){}),push.on("registration",function(result){ionic.Platform.isIOS()?storeDeviceToken(result.registrationId,"IOS"):ionic.Platform.isAndroid()&&storeDeviceToken(result.registrationId,"ANDROID")}),push.on("notification",function(notification){ionic.Platform.isAndroid()?$window.plugin.notification.local.schedule({title:notification.title,text:notification.message,icon:"res://icon.png",smallIcon:"res://pushicon.png"}):ionic.Platform.isIOS()&&handleIOS(notification)})}function storeDeviceToken(deviceId,deviceType){var registration={deviceId:deviceId,platform:deviceType,active:!0};return $http({url:governorUrl+"/device",method:"POST",headers:{"Content-Type":"application/json"},data:registration}).then(function(dataWrapper){$log.info("PushService - registered to server: "+JSON.stringify(dataWrapper)),deviceId=dataWrapper.data.device.deviceId})["catch"](function(err){$log.info("PushService - error: "+JSON.stringify(err))})}function handleIOS(notification){if(notification.additionalData.foreground===!0){if(notification.sound){var audio=$cordovaMedia.newMedia(notification.sound);audio.then(function(r){$timeout(function(){audio.play()},500)},function(r){})}$cordovaDialogs.alert(notification.title,notification.message)}else $cordovaDialogs.alert(notification.title,notification.message)}var deviceId=null;this.registerDevice=registerDevice,this.getDeviceId=function(){return deviceId}}angular.module("applicat.push.service",["ngCordova"]).service("PushService",PushService),PushService.$inject=["$http","$log","$q","$cordovaDialogs","$window","$timeout","$rootScope","$cordovaMedia","googlePushSenderID","governorUrl"]}(),function(){"use strict";function appStorage($localStorage,appName){return $localStorage[appName]||($localStorage[appName]={}),$localStorage[appName]}angular.module("app").factory("appStorage",appStorage),appStorage.$inject=["$localStorage","appName"]}(),function(){"use strict";function AuthInterceptor($q,$injector,$location,LocalService,appName,appStorage){return{request:function(req){var token=appStorage.token;return token&&(req.headers["Content-Type"]="application/json",req.headers.Authorization="Bearer "+token),req}}}function AuthService($http,$q,$location,$state,governorUrl,LocalService,appName,kakaoKey,facebookKey){this.registerWithImage=function(user,file,success,fail){var options=new FileUploadOptions,newUser=angular.copy(user);options.params=newUser,options.headers={Connection:"close"},options.chunkedMode=!1;var ft=new FileTransfer;ft.upload(file,encodeURI(governorUrl+"/user/registerWithImage"),success,fail,options,!0)},this.verifyResetCode=function(email,code){var deferred=$q.defer();return $http({url:governorUrl+"/user/passwordresetcomplete",method:"put",headers:{"Content-Type":"application/json"},data:{email:email,code:code}}).success(function(data,status,headers,config){LocalService.set(appName+"_auth_token",JSON.stringify(data)),deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.passReset=function(email){var deferred=$q.defer();return $http({url:governorUrl+"/user/resetStart",method:"post",headers:{"Content-Type":"application/json"},data:{email:email}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.changePassword=function(oldPassword,newPassword){var deferred=$q.defer();return $http({url:governorUrl+"/user/changePassword",method:"post",headers:{"Content-Type":"application/json"},data:{oldPassword:oldPassword,newPassword:newPassword}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.checkNickname=function(nickname){var deferred=$q.defer();return $http({url:governorUrl+"/user/checknickname",method:"get",headers:{"Content-Type":"application/json"},params:{nickname:nickname}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.checkEmail=function(email){var deferred=$q.defer();return $http({url:governorUrl+"/user/checkEmail",method:"get",headers:{"Content-Type":"application/json"},params:{email:email}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.getMyProfile=function(){var deferred=$q.defer();return $http({url:governorUrl+"/user/profile",method:"get",headers:{"Content-Type":"application/json"}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.updateMyProfile=function(nickname){var deferred=$q.defer();return $http({url:governorUrl+"/user/update",method:"put",headers:{"Content-Type":"application/json"},data:{nickname:nickname}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.updateMyProfileWithImage=function(user,file,success,fail){var options=new FileUploadOptions,updateUser=angular.copy(user);options.params=updateUser,options.httpMethod="PUT",options.headers={Connection:"close",Authorization:"Bearer "+this.getToken()},options.chunkedMode=!1;var ft=new FileTransfer;ft.upload(file,encodeURI(governorUrl+"/user/updateWithImage"),success,fail,options,!0)}}angular.module("app").factory("AuthInterceptor",AuthInterceptor),AuthInterceptor.$inject=["$q","$injector","$location","LocalService","appName","appStorage"],angular.module("app").service("AuthService",AuthService),AuthService.$inject=["$http","$q","$location","$state","governorUrl","LocalService","appName","kakaoKey","facebookKey"]}(),function(){"use strict";function Distance(geolib){var service={between:geolib.getDistance};return service}angular.module("app").factory("Distance",Distance),Distance.$inject=["geolib"]}(),function(){"use strict";function Dom($timeout,$window,$ionicScrollDelegate,$rootScope,appStorage){function focusById(id){$timeout(function(){var domElement=$window.document.getElementById(id);domElement&&domElement.focus()})}function menuScroller(arrayData,$index){function calculatePixelToIndex(index){for(var totalVw=0,i=0;index>i;i++)totalVw+=arrayData[i].vw;var totalPixelToIndex=totalVw/100*$rootScope.windowWidth+$rootScope.windowWidth/2+arrayData[index].vw/100*$rootScope.windowWidth/2-$rootScope.windowWidth;return totalPixelToIndex}var pixelLocation=calculatePixelToIndex($index);$timeout(function(){$ionicScrollDelegate.scrollTo(pixelLocation,appStorage.scrollPositionY,!0)},0)}var service={focusById:focusById,menuScroller:menuScroller};return service}angular.module("app").factory("Dom",Dom),Dom.$inject=["$timeout","$window","$ionicScrollDelegate","$rootScope","appStorage"]}(),function(){"use strict";function Favorite($stateParams,Message,Posts,localStorage){function isFavorite(localStorageItem){var favoritesString=localStorage.getItem(localStorageItem),favoritesArray=angular.fromJson(favoritesString);Array.isArray(favoritesArray)||(favoritesArray=[]);for(var i=0;i<favoritesArray.length;i++){var favorite=favoritesArray[i];if(favorite.id===$stateParams.id)return!0}}function saveToFavorite(localStorageItem,vm,model,sendLikeStorageName){var favoritesString=localStorage.getItem(localStorageItem),favoritesArray=angular.fromJson(favoritesString);Array.isArray(favoritesArray)||(favoritesArray=[]);for(var i=0;i<favoritesArray.length;i++){var favorite=favoritesArray[i];if(favorite.id===$stateParams.id)return favoritesArray.splice(i,1),favoritesString=angular.toJson(favoritesArray),localStorage.setItem(localStorageItem,favoritesString),vm.styleFavorite=!1,Message.alert("즐겨찾기 알림","즐겨찾기에서 삭제되었습니다."),!1}var favoriteToSave={id:model.current.id};addToAttributes(model,favoriteToSave),favoritesArray.push(favoriteToSave),favoritesString=angular.toJson(favoritesArray),localStorage.setItem(localStorageItem,favoritesString),sendLikeStorageName&&sendLike(sendLikeStorageName,favoriteToSave.id,model),vm.styleFavorite=!0,Message.alert("즐겨찾기 알림","즐겨찾기에 추가되었습니다.")}function addToAttributes(model,favoriteToSave){if(model.current.name&&(favoriteToSave.name=model.current.name),model.current.title&&(favoriteToSave.title=model.current.title),model.current.photos.length>0&&(favoriteToSave.photos=[{url:model.current.photos[0].url}]),model.current.location&&(favoriteToSave.location={coordinates:model.current.location.coordinates}),model.current.address&&(favoriteToSave.address=model.current.address),model.current.createdBy&&(favoriteToSave.createdBy={},favoriteToSave.createdBy.nickname=model.current.createdBy.nickname),model.current.likes&&(favoriteToSave.likes=model.current.likes),model.current.comments){favoriteToSave.comments=[];for(var i=0;i<model.current.comments.length;i++)favoriteToSave.comments.push(1)}}function sendLike(likedOnceStorageItem,id,model){var likedOnceString=localStorage.getItem(likedOnceStorageItem),likedOnceArray=angular.fromJson(likedOnceString);Array.isArray(likedOnceArray)||(likedOnceArray=[]);for(var i=0;i<likedOnceArray.length;i++){var currentId=likedOnceArray[i];if(currentId===id)return!1}likedOnceArray.push(id),likedOnceString=angular.toJson(likedOnceArray),localStorage.setItem(likedOnceStorageItem,likedOnceString),Posts.likePost({post:id}).$promise.then(function(postWrapper){model.current.likes=postWrapper.posts[0].likes},function(error){})}var service={isFavorite:isFavorite,saveToFavorite:saveToFavorite};return service}angular.module("app").factory("Favorite",Favorite),Favorite.$inject=["$stateParams","Message","Posts","localStorage"]}(),function(){"use strict";function gpsService($cordovaGeolocation,Message,_){function getPosition(){return $cordovaGeolocation.getCurrentPosition({maximumAge:6e5,timeout:7e3}).then(function(position){},function(error){Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요.")})}var checkGPS=_.throttle(getPosition,8e3,{trailing:!1}),service={checkGPS:checkGPS};return service}angular.module("app").factory("gpsService",gpsService),gpsService.$inject=["$cordovaGeolocation","Message","_"]}(),function(){"use strict";angular.module("app").factory("LocalService",function(){return{get:function(key){return localStorage.getItem(key)},set:function(key,val){return localStorage.setItem(key,val)},unset:function(key){return localStorage.removeItem(key)},getSession:function(key){return sessionStorage.getItem(key)},setSession:function(key,val){return sessionStorage.setItem(key,val)},unsetSession:function(key){return sessionStorage.removeItem(key)}}})}(),function(){"use strict";function Message($ionicLoading,$ionicPopup){function loadingDefault(message){$ionicLoading.show(message)}function messageSuccess(message){$ionicLoading.show({template:'<h4 class="message-success">'+message+"</h4>",duration:2e3})}function messageError(message){$ionicLoading.show({template:'<h4 class="message-error">'+message+"</h4>",duration:2e3})}function loadingHide(){$ionicLoading.hide()}function popUpAlertDefault(title,message){return $ionicPopup.alert({title:title||"인터넷이 끊겼습니다.",template:message||"인터넷을 켜주세요."})}var service={loading:loadingDefault,hide:loadingHide,success:messageSuccess,error:messageError,alert:popUpAlertDefault};return service}angular.module("app").factory("Message",Message),Message.$inject=["$ionicLoading","$ionicPopup"]}(),function(){"use strict";function U($ionicHistory,$ionicScrollDelegate,$timeout,_,$filter,Message,$ionicSideMenuDelegate,$state,$ionicViewSwitcher,$ionicSlideBoxDelegate){function isForwardView(stateName){var isView=$ionicHistory.viewHistory().forwardView&&$ionicHistory.viewHistory().forwardView.stateName===stateName;return isView}function isBackView(stateName){var isView=$ionicHistory.viewHistory().backView&&$ionicHistory.viewHistory().backView.stateName===stateName;return isView}function isSiblingView(stateName){return isForwardView(stateName)||isBackView(stateName)}function areSiblingViews(stateNames){var i,stateName;for(i=0;i<stateNames.length;i++)if(stateName=stateNames[i],isSiblingView(stateName))return!0;return!1}function resize(){$timeout(function(){$ionicScrollDelegate.resize()},0)}function update(){$timeout(function(){$ionicSlideBoxDelegate.update()},0)}function resetSlides(){$ionicSlideBoxDelegate.slide(0,0),$ionicSlideBoxDelegate.update()}function reset(model){for(var key in model)Array.isArray(model[key])?model[key]=[]:null!==model[key]&&"object"==typeof model[key]?model[key]={}:"boolean"==typeof model[key]?model[key]=!1:model[key]=null}function goToState(state,params,direction){Message.hide(),$timeout(function(){direction&&$ionicViewSwitcher.nextDirection(direction),$state.go(state,params),$ionicSideMenuDelegate.toggleLeft(!1)},0)}function goBack(direction){direction&&$ionicViewSwitcher.nextDirection(direction),$ionicHistory.goBack()}function error(err){Message.hide(),Message.alert()}function bindData(data,model,name){"s"===name[name.length-1]?(model[name]=data[name],model.more=data.more):model[name]=data,resize(),$timeout(function(){model.loading=!1},50)}function appendData(dataWrapper,model,name){"s"===name[name.length-1]&&(angular.forEach(dataWrapper[name],function(item){model[name].push(item)}),model.more=dataWrapper.more,resize())}function broadcast($scope){$scope.$broadcast("scroll.refreshComplete"),$scope.$broadcast("scroll.infiniteScrollComplete")}var service={isForwardView:isForwardView,isBackView:isBackView,isSiblingView:isSiblingView,areSiblingViews:areSiblingViews,resize:resize,update:update,resetSlides:resetSlides,reset:reset,goToState:goToState,goBack:goBack,error:error,bindData:bindData,appendData:appendData,broadcast:broadcast};return service}angular.module("app").factory("U",U),U.$inject=["$ionicHistory","$ionicScrollDelegate","$timeout","_","$filter","Message","$ionicSideMenuDelegate","$state","$ionicViewSwitcher","$ionicSlideBoxDelegate"]}(),function(){"use strict";function parentScroll($ionicScrollDelegate,$timeout,$window){function compile(element,attr){return $window.horizontalIonScrollCount||($window.horizontalIonScrollCount=0),$window.horizontalIonScrollCount++,attr.delegateHandle="horizontal"+$window.horizontalIonScrollCount,function(scope,element,attr){$timeout(function(){var horizontal=attr.delegateHandle,sv=$ionicScrollDelegate.$getByHandle(horizontal).getScrollView(),container=sv.__container,originaltouchStart=sv.touchStart,originalmouseDown=sv.mouseDown,originaltouchMove=sv.touchMove,originalmouseMove=sv.mouseMove;container.removeEventListener("touchstart",sv.touchStart),container.removeEventListener("mousedown",sv.mouseDown),$window.document.removeEventListener("touchmove",sv.touchMove),$window.document.removeEventListener("mousemove",sv.mousemove),sv.touchStart=function(e){e.preventDefault=function(){},originaltouchStart.apply(sv,[e])},sv.touchMove=function(e){e.preventDefault=function(){},originaltouchMove.apply(sv,[e])},sv.mouseDown=function(e){e.preventDefault=function(){},originalmouseDown&&originalmouseDown.apply(sv,[e])},sv.mouseMove=function(e){e.preventDefault=function(){},originalmouseMove&&originalmouseMove.apply(sv,[e])},container.addEventListener("touchstart",sv.touchStart,!1),container.addEventListener("mousedown",sv.mouseDown,!1),$window.document.addEventListener("touchmove",sv.touchMove,!1),$window.document.addEventListener("mousemove",sv.mouseMove,!1)})}}return{scope:!0,restrict:"A",compile:compile}}angular.module("app").directive("parentScroll",parentScroll),parentScroll.$inject=["$ionicScrollDelegate","$timeout","$window"]}(),function(){"use strict";function ngEnter($window){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter)}),$window.cordova.plugins.Keyboard.close(),event.preventDefault())})}}angular.module("app").directive("ngEnter",ngEnter),ngEnter.$inject=["$window"]}(),function(){"use strict";function onFinishRender($timeout){function link(scope){scope.$last===!0&&$timeout(function(){scope.$broadcast("ngRepeatFinished")})}return{restrict:"A",link:link}}angular.module("app").directive("onFinishRender",onFinishRender),onFinishRender.$inject=["$timeout"]}(),function(){"use strict";function touch($timeout){function link(scope,element){element.on("click",function(){element.addClass("touch"),$timeout(function(){element.removeClass("touch")},50)})}return{restrict:"A",link:link}}angular.module("app").directive("touch",touch),touch.$inject=["$timeout"]}(),function(){"use strict";function vw($rootScope,$window){function link(scope,element){$rootScope.windowWidth=element.prop("offsetWidth"),$window.addEventListener("resize",function(){$rootScope.$apply(function(){$rootScope.windowWidth=element.prop("offsetWidth")})})}return{link:link}}angular.module("app").directive("vw",vw),vw.$inject=["$rootScope","$window"]}(),function(){"use strict";function cloudinaryFilter(size){var matching=/upload/;return function(input){if(input){var index=input.search(matching);return input.substring(0,index)+"upload/c_scale,w_"+size+"/"+input.substring(input.lastIndexOf("/"))}return input}}angular.module("app").filter("cloudinary400",cloudinaryFilter.bind(null,400)).filter("cloudinary500",cloudinaryFilter.bind(null,500))}(),function(){"use strict";function mToKm(){return function(input){return input>=1e3?(input/1e3).toFixed(2)+"km":input+"m"}}angular.module("app").filter("mToKm",mToKm)}(),function(){"use strict";function groupByOpeningHours(_){function filter(openingHours){openingHours=appendIndexToObj(openingHours);var grouped=groupByBusinessHours(openingHours),orderedResultArray=createArrayOfObjWithGroup(grouped),textArray=_.map(orderedResultArray,function(result){result.days=_.map(result.days,function(day){var daysKorean=parseDay(day);return daysKorean}),result.days=tildeArrayValuesToText(result.days);var apendTime="";apendTime=result.start===result.end?"휴무":result.start+" ~ "+result.end;var texts=result.days+" "+apendTime;return texts});return textArray}function appendIndexToObj(openingHours){for(var i=0;i<openingHours.length;i++)openingHours[i].index=i;return openingHours}function groupByBusinessHours(openingHours){var grouped=_.groupBy(openingHours,function(hoursObj){var start=hoursObj.start,end=hoursObj.end,groupCategory=start+end;return groupCategory});return grouped}function createArrayOfObjWithGroup(grouped){for(var keys=Object.keys(grouped),resultArray=[],i=0;i<keys.length;i++){for(var key=keys[i],subOpeningHoursArray=grouped[key],daysResult=[],j=0;j<subOpeningHoursArray.length;j++){var openingHourObj=subOpeningHoursArray[j];daysResult.push(openingHourObj.index)}var start=subOpeningHoursArray[0].start,end=subOpeningHoursArray[0].end;resultArray.push({days:daysResult,start:start,end:end})}var orderedResultArray=_.sortBy(resultArray,function(obj){var day=obj.days[0];return 0===day&&(day=7),day});return orderedResultArray}function parseDay(day){return 0===day?"일":1===day?"월":2===day?"화":3===day?"수":4===day?"목":5===day?"금":6===day?"토":void 0}function tildeArrayValuesToText(array){for(var daysInNumbers=_.map(array,function(dayInKorean){return"일"===dayInKorean?7:"월"===dayInKorean?1:"화"===dayInKorean?2:"수"===dayInKorean?3:"목"===dayInKorean?4:"금"===dayInKorean?5:"토"===dayInKorean?6:void 0}),i=0;i<daysInNumbers.length-1;i++){var day_1=daysInNumbers[i],day_2=daysInNumbers[i+1];if(Math.abs(day_1-day_2)>1){for(var concatStart=array[0],j=1;j<daysInNumbers.length;j++)concatStart=concatStart+", "+array[j];return concatStart}}return array.length>2?array[0]+" ~ "+array[array.length-1]:2===array.length?array[0]+", "+array[1]:1===array.length?array[0]:void 0}return filter}angular.module("app").filter("groupByOpeningHours",groupByOpeningHours),groupByOpeningHours.$inject=["_"]}(),function(){"use strict";function filterByTag(){function filter(collection,tagName){var resultArray=[];if(collection)for(var i=0;i<collection.length;i++)for(var element=collection[i],j=0;j<element.tags.length;j++){var tag=element.tags[j];tag===tagName&&resultArray.push(element)}return resultArray}return filter}angular.module("app").filter("filterByTag",filterByTag)}(),function(){"use strict";function Bookings($resource,governorUrl,$cordovaFileTransfer){var bookingUrl=governorUrl+"/booking/:list/:image/:mine/:dateBetween/:request",params={list:"@list",image:"@image",mine:"@mine",dateBetween:"@dateBetween"},actions={getBookings:{method:"GET",params:{list:"list"}},getMyBookings:{method:"GET",params:{list:"list",mine:"mine"}},getBookingsDateBetween:{method:"GET",params:{dateBetween:"dateBetween"}},findById:{method:"GET"},createBooking:{method:"POST"},requestBooking:{method:"POST",params:{request:"request"}},updateBooking:{method:"PUT",isArray:!0,headers:{"Content-Type":"text/plain"}},removeBooking:{method:"DELETE"}},service=$resource(bookingUrl,params,actions);return service.createBookingWithImage=function(parameters,booking){angular.extend(booking,parameters);var filePath=booking.file;delete booking.file;var options={params:booking,chunkedMode:!1};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/booking/image",filePath,options)}},service.updateBookingWithImage=function(parameters,booking){angular.extend(booking,parameters);var filePath=booking.file;delete booking.file;var options={params:booking,chunkedMode:!1,httpMethod:"PUT"};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/booking/image",filePath,options)}},service}angular.module("app").factory("Bookings",Bookings),Bookings.$inject=["$resource","governorUrl","$cordovaFileTransfer"]}(),function(){"use strict";function Comments($resource,governorUrl){var commentUrl=governorUrl+"/post/comment",params={},actions={addCommentToPost:{method:"POST"}},service=$resource(commentUrl,params,actions);return service}angular.module("app").factory("Comments",Comments),Comments.$inject=["$resource","governorUrl"]}(),function(){"use strict";function Contacts($resource,governorUrl){var deviceUrl=governorUrl+"/:contact/:admin",params={contact:"@contact",admin:"@admin"},actions={contactAdmin:{method:"POST",params:{contact:"contact",admin:"admin"}}},service=$resource(deviceUrl,params,actions);return service}angular.module("app").factory("Contacts",Contacts),Contacts.$inject=["$resource","governorUrl"]}(),function(){"use strict";function Devices($resource,governorUrl,PushService){var deviceUrl=governorUrl+"/device/:sendMessageAll",params={sendMessageAll:"@sendMessageAll"},actions={pushAll:{method:"GET",params:{sendMessageAll:"sendMessageAll"}},register:{method:"POST"},update:{method:"PUT"}},service=$resource(deviceUrl,params,actions);return service.getDeviceIdSync=function(){var deviceId=PushService.getDeviceId();return deviceId},service}angular.module("app").factory("Devices",Devices),Devices.$inject=["$resource","governorUrl","PushService"]}(),function(){"use strict";function Likes($resource,governorUrl){var likesUrl=governorUrl+"/post/:like/:unlike",params={like:"@like",unlike:"@unlike"},actions={likePost:{method:"POST"},unlikePost:{method:"DELETE"}},service=$resource(likesUrl,params,actions);return service}angular.module("app").factory("Likes",Likes),Likes.$inject=["$resource","governorUrl"]}(),function(){"use strict";function Photos($resource,governorUrl,AuthService,$cordovaFileTransfer){var photosUrl=governorUrl+"/photo",params={},actions={removePhoto:{method:"DELETE"}},service=$resource(photosUrl,params,actions);return service.uploadPhoto=function(parameters,post){angular.extend(post,parameters);var filePath=post.file?post.file:"[]";delete post.file;var options={params:post,chunkedMode:!1,headers:{Connection:"close",Authorization:"Bearer "+AuthService.getToken()}};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/photo",filePath,options,!0)}},service}angular.module("app").factory("Photos",Photos),Photos.$inject=["$resource","governorUrl","AuthService","$cordovaFileTransfer"]}(),function(){"use strict";function Places($resource,governorUrl,$cordovaFileTransfer){var placeUrl=governorUrl+"/place/:list/:mine/:within/:image:photos",params={list:"@list",mine:"@mine",within:"@within",image:"@image",photos:"@photos"},actions={getPlaces:{method:"GET",params:{list:"list"}},getMyPlaces:{method:"GET",params:{list:"list",mine:"mine"}},getPlacesWithin:{method:"GET",params:{list:"list",within:"within"}},getPlacePhotos:{method:"GET",params:{photos:"photos"},isArray:!0},findById:{method:"GET"},createPlace:{method:"POST"},createPlaceWithImage:{method:"POST",params:{image:"image"}},updatePlace:{method:"PUT",isArray:!0},updateMyPlace:{method:"PUT",params:{mine:"mine"},isArray:!0},updatePlaceWithImage:{method:"PUT",params:{image:"image"}},removePlace:{method:"DELETE"}},service=$resource(placeUrl,params,actions);return service.createPlaceWithImage=function(parameters,place){angular.extend(place,parameters);var filePath=place.file;delete place.file;var options={params:place,chunkedMode:!1};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/place/image",filePath,options)}},service.updatePlaceWithImage=function(parameters,place){angular.extend(place,parameters);var filePath=place.file;delete place.file;var options={params:place,chunkedMode:!1,httpMethod:"PUT"};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/place/image",filePath,options)}},service}angular.module("app").factory("Places",Places),
Places.$inject=["$resource","governorUrl","$cordovaFileTransfer"]}(),function(){"use strict";function Posts($resource,governorUrl,$cordovaFileTransfer,AuthService){var postUrl=governorUrl+"/post/:list/:image/:mine/:like",params={list:"@list",image:"@image",mine:"@mine",like:"@like"},actions={getPosts:{method:"GET",params:{list:"list"}},getMyPosts:{method:"GET",params:{list:"list",mine:"mine"}},findById:{method:"GET"},createPost:{method:"POST"},updatePost:{method:"PUT"},likePost:{method:"POST",params:{like:"like"}},removePost:{method:"DELETE"}},service=$resource(postUrl,params,actions);return service.createPostWithImage=function(parameters,post){angular.extend(post,parameters);var filePath=post.file?post.file:"[]";delete post.file,post.category="SHOW-POST";var options={params:post,chunkedMode:!1,headers:{Connection:"close",Authorization:"Bearer "+AuthService.getToken()}};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/post",filePath,options,!0)}},service.updatePostWithImage=function(parameters,post){angular.extend(post,parameters);var filePath=post.file;delete post.file;var options={params:post,chunkedMode:!1,httpMethod:"PUT",headers:{Connection:"close",Authorization:"Bearer "+AuthService.getToken()}};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/post",filePath,options,!0)}},service}angular.module("app").factory("Posts",Posts),Posts.$inject=["$resource","governorUrl","$cordovaFileTransfer","AuthService"]}(),function(){"use strict";function Products($resource,governorUrl,$cordovaFileTransfer){var productUrl=governorUrl+"/product/:list/:image/:mine/:checkProductCode",params={list:"@list",image:"@image",mine:"@mine",checkProductCode:"@checkProductCode"},actions={getProducts:{method:"GET",params:{list:"list"}},getMyProducts:{method:"GET",params:{list:"list",mine:"mine"}},checkProductCode:{method:"GET",params:{checkProductCode:"checkProductCode"}},findById:{method:"GET"},createProduct:{method:"POST"},updateProduct:{method:"PUT"},removeProduct:{method:"DELETE"}},service=$resource(productUrl,params,actions);return service.createProductWithImage=function(parameters,product){angular.extend(product,parameters);var filePath=product.file;delete product.file;var options={params:product,chunkedMode:!1};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/product/image",filePath,options)}},service.updateProductWithImage=function(parameters,product){angular.extend(product,parameters);var filePath=product.file;delete product.file;var options={params:product,chunkedMode:!1,httpMethod:"PUT"};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/product/image",filePath,options)}},service}angular.module("app").factory("Products",Products),Products.$inject=["$resource","governorUrl","$cordovaFileTransfer"]}(),function(){"use strict";function RoyaltyPoints($resource,governorUrl){var royaltyUrl=governorUrl+"/royaltyPoint/:list/:mine",params={list:"@list",mine:"@mine"},actions={getRoyaltyPoints:{method:"GET",params:{list:"list"}},getMyRoyaltyPoints:{method:"GET",params:{list:"list",mine:"mine"}},findById:{method:"GET"},createRoyaltyPoint:{method:"POST"},updateRoyaltyPoint:{method:"PUT",isArray:!0},removeRoyaltyPoint:{method:"DELETE"}},service=$resource(royaltyUrl,params,actions);return service}angular.module("app").factory("RoyaltyPoints",RoyaltyPoints),RoyaltyPoints.$inject=["$resource","governorUrl"]}(),function(){"use strict";function Users($resource,governorUrl){var userUrl=governorUrl+"/:auth/:register/:user/:local/:checkNickname/:list/:role/:myrole",params={auth:"@auth",register:"@register",user:"@user",checkNickname:"@checkNickname",list:"@list",role:"@role"},actions={register:{method:"POST",params:{register:"register"}},checkNickname:{method:"GET",params:{user:"user",checkNickname:"checkNickname"}},login:{method:"POST",params:{auth:"auth",local:"local"}},getMyRole:{method:"GET",params:{role:"role",myrole:"myrole"}}},service=$resource(userUrl,params,actions);return service}angular.module("app").factory("Users",Users),Users.$inject=["$resource","governorUrl"]}(),function(){"use strict";function AdminController(AdminModel,Places,$scope,Message,appStorage,$state){function onBeforeEnter(){Message.loading(),Places.getMyPlaces({id:appStorage.user.id}).$promise.then(function(placesWrapper){AdminModel.place=placesWrapper.places[0],Message.hide()},function(error){Message.hide(),Message.alert("관리자 알림","현재가지고 있으신 바가 없습니다.")})}function updateTableSexPercentage(){Places.updateMyPlace({id:AdminModel.place.id},{male:AdminModel.form.male,female:AdminModel.form.female}).$promise.then(function(data){Message.hide(),AdminModel.form.male="",AdminModel.form.female="",Message.alert("실시간정보 알림","테이블 현황이 업데이트 되었습니다.")},function(error){Message.hide(),Message.alert()})}function updatePopularMenu(){Places.updateMyPlace({id:AdminModel.place.id},{popularFood:AdminModel.form.popularFood,popularDrink:AdminModel.form.popularDrink}).$promise.then(function(data){Message.hide(),Message.alert("실시간정보 알림","인기 안주와 인기 주류가 업데이트 되었습니다.").then(function(){$state.go("main.home.theme")})},function(error){Message.hide(),Message.alert()})}var Admin=this;Admin.Model=AdminModel,Admin.updateTableSexPercentage=updateTableSexPercentage,Admin.updatePopularMenu=updatePopularMenu,$scope.$on("$ionicView.beforeEnter",onBeforeEnter)}angular.module("app").controller("AdminController",AdminController),AdminController.$inject=["AdminModel","Places","$scope","Message","appStorage","$state"]}(),function(){"use strict";function AdminModel(){var model={place:{},form:{male:"",female:"",popularFood:[{name:null,percentage:null},{name:null,percentage:null},{name:null,percentage:null}],popularDrink:[{name:null,percentage:null},{name:null,percentage:null},{name:null,percentage:null}]}};return model}angular.module("app").factory("AdminModel",AdminModel),AdminModel.$inject=[]}(),function(){"use strict";function AdminMenuController(AdminMenuModel,Places,$scope){function onBeforeEnter(){Places.getMyPlaces({}).$promise.then(function(data){},function(error){})}var AdminMenu=this;AdminMenu.Model=AdminMenuModel,$scope.$on("$ionicView.beforeEnter",onBeforeEnter)}angular.module("app").controller("AdminMenuController",AdminMenuController),AdminMenuController.$inject=["AdminMenuModel","Places","$scope"]}(),function(){"use strict";function AdminMenuModel(){var model={};return model}angular.module("app").factory("AdminMenuModel",AdminMenuModel),AdminMenuModel.$inject=[]}(),function(){"use strict";function DaumMapController(DaumMapModel,$ionicModal,$scope,$state,$stateParams,$timeout){var Map=this;Map.Model=DaumMapModel,Map.searchType="address",Map.findMeThenSearchNearBy=DaumMapModel.findMeThenSearchNearBy,Map.searchLocationNearBy=function(value){return"address"===Map.searchType?DaumMapModel.searchLocationNearBy(value):"placeName"===Map.searchType?DaumMapModel.searchPlaceByName(value):void 0},Map.setPlaceholderText=function(){return"address"===Map.searchType?"지역을 검색해주세요":"placeName"===Map.searchType?"상호명을 입력해주세요":void 0},Map.goToDetailHandler=function(state){DaumMapModel.modal.hide(),$state.go(state,{id:DaumMapModel.selectedPlace.id})},Map.goToHandler=function(state,params){$state.go(state,params)},Map.hasStateParams=function(paramName){return!!$stateParams[paramName]},Map.selectedPlace=DaumMapModel.selectedPlace,$scope.$on("$ionicView.enter",function(){$ionicModal.fromTemplateUrl("state/daumMap/placeModal.html",{scope:$scope,animation:"slide-in-up"}).then(function(modal){DaumMapModel.modal=modal}),DaumMapModel.domMap.relayout(),$stateParams.id&&DaumMapModel.findPlaceByIdThenDrawAPlace($stateParams.id)}),$scope.$on("$ionicView.afterEnter",function(){$timeout(function(){DaumMapModel.domMap.relayout()},0)})}angular.module("app").controller("DaumMapController",DaumMapController),DaumMapController.$inject=["DaumMapModel","$ionicModal","$scope","$state","$stateParams","$timeout"]}(),function(){"use strict";function daumMap(DaumMapModel,Places,Bookings,$state,$cordovaGeolocation,Message,$q,$stateParams,daum,_,moment){return{scope:{markerSrc:"@",markerClickedSrc:"@",markerWidth:"@",markerHeight:"@"},compile:function(element){function processPin(markerImg,markerClickedImg,scope){angular.forEach(DaumMapModel.places,function(place,i){var placeLongitude=place.location.coordinates[0],placeLatitude=place.location.coordinates[1],position=new daum.maps.LatLng(placeLatitude,placeLongitude),marker=new daum.maps.Marker({map:map,position:position,title:String(i),image:markerImg,clickable:!0});daum.maps.event.addListener(marker,"click",function(){var marker=this;scope.$apply(function(){angular.forEach(DaumMapModel.markers,function(otherMarker){otherMarker.setImage(markerImg)}),marker.setImage(markerClickedImg);var index=Number(marker.getTitle());Message.loading(),Places.findById({id:DaumMapModel.places[index].id,populates:"photos"}).$promise.then(function(data){Message.hide(),DaumMapModel.selectedPlace=data,DaumMapModel.modal.show()},function(error){Message.hide(),Message.alert()})})}),DaumMapModel.markers.push(marker)})}var DOM=element[0],mapOptions={center:new daum.maps.LatLng(37.5,127),level:4,draggable:!0};daum.maps.disableHD();var map=new daum.maps.Map(DOM,mapOptions),ps=new daum.maps.services.Places,filterValue=null,drawMarkers=function(currentCenter,markerImg,markerClickedImg,scope){angular.forEach(DaumMapModel.markers,function(marker){marker.setMap(null)}),DaumMapModel.markers=[];var PlacesPromise={};PlacesPromise=$stateParams.id?Places.findById({id:$stateParams.id,populates:"photos"}).$promise:Places.getPlacesWithin({latitude:currentCenter.latitude,longitude:currentCenter.longitude,distance:currentCenter.distance||5e3,limit:currentCenter.limit||50,filter:filterValue||null}).$promise,PlacesPromise.then(function(placesWrapper){$stateParams.id?DaumMapModel.places=[placesWrapper]:DaumMapModel.places=placesWrapper.places,processPin(markerImg,markerClickedImg,scope),Message.hide(),filterValue=null},function(err){filterValue=null})};return DaumMapModel.findMeThenSearchNearBy=function(justFind){Message.loading(),$cordovaGeolocation.getCurrentPosition({maximumAge:6e5,timeout:5e3}).then(function(position){return Message.hide(),null==position.coords?(Message.hide(),Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요."),!1):(DaumMapModel.currentPosition={latitude:position.coords.latitude,longitude:position.coords.longitude},void(justFind||map.setCenter(new daum.maps.LatLng(DaumMapModel.currentPosition.latitude,DaumMapModel.currentPosition.longitude))))},function(err){Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요."),Message.hide()}),Message.hide()},DaumMapModel.searchLocationNearBy=function(value){return Message.loading(),value?void ps.keywordSearch(value,function(status,data){return void 0===data.places[0]?(Message.hide(),Message.alert("요청하신 장소가 없습니다","다시검색해주세요"),!1):(map.panTo(new daum.maps.LatLng(data.places[0].latitude,data.places[0].longitude)),void Message.hide())},function(err){Message.hide(),Message.alert({title:"위치 공유가 꺼져있습니다.",template:"위치 공유 켜주세요."})}):(Message.hide(),Message.alert("검색하기 알림","장소 값을 넣어서 다시 검색해주세요"),!1)},DaumMapModel.searchPlaceByName=function(value){return Message.loading(),value?(filterValue=value,void Places.getPlaces({category:"HUNGERS-BAR",filter:value,limit:50}).$promise.then(function(placesWrapper){return placesWrapper.places&&placesWrapper.places.length>0?(map.panTo(new daum.maps.LatLng(placesWrapper.places[0].location.coordinates[1],placesWrapper.places[0].location.coordinates[0])),void Message.hide()):(Message.hide(),Message.alert("요청하신 장소가 없습니다","다시검색해주세요"),!1)},function(err){})):(Message.hide(),Message.alert("검색하기 알림","장소 값을 넣어서 다시 검색해주세요"),!1)},DaumMapModel.findPlaceByIdThenDrawAPlace=function(id){Message.loading(),Places.findById({id:id,populates:"photos"}).$promise.then(function(place){var currentCenter={longitude:map.getCenter().getLng(),latitude:map.getCenter().getLat()};Math.abs(currentCenter.longitude-place.location.coordinates[1])<1e-5&&Math.abs(currentCenter.latitude-place.location.coordinates[0])<1e-5&&map.panTo(new daum.maps.LatLng(currentCenter.longitude+.011,currentCenter.latitude+.011)),map.panTo(new daum.maps.LatLng(place.location.coordinates[1],place.location.coordinates[0])),Message.hide()},function(error){})},function(scope){var markerSize=new daum.maps.Size(Number(scope.markerWidth),Number(scope.markerHeight)),markerImg=new daum.maps.MarkerImage(scope.markerSrc,markerSize),markerClickedImg=new daum.maps.MarkerImage(scope.markerClickedSrc,markerSize);map.relayout(),DaumMapModel.domMap=map,daum.maps.event.addListener(map,"idle",function(){map.relayout(),Message.loading();var currentCenter={longitude:map.getCenter().getLng(),latitude:map.getCenter().getLat()};angular.extend(currentCenter,{distance:2e3,limit:20}),drawMarkers(currentCenter,markerImg,markerClickedImg,scope)})}}}}angular.module("app").directive("daumMap",daumMap),daumMap.$inject=["DaumMapModel","Places","Bookings","$state","$cordovaGeolocation","Message","$q","$stateParams","daum","_","moment"]}(),function(){"use strict";function DaumMapModel(){var model={category:"NAIL-PLACE",currentPosition:{latitude:"FLOAT",longitude:"FLOAT"},markers:[],places:[],selectedPlace:{},modal:{},findMeThenSearchNearBy:function(justFindDontDraw){},searchLocationNearBy:function(){}};return model}angular.module("app").factory("DaumMapModel",DaumMapModel)}(),function(){"use strict";function EventRegisterController(EventRegisterModel){var EventRegister=this;EventRegister.Model=EventRegisterModel}angular.module("app").controller("EventRegisterController",EventRegisterController),EventRegisterController.$inject=["EventRegisterModel"]}(),function(){"use strict";function EventRegisterModel(){var model={};return model}angular.module("app").factory("EventRegisterModel",EventRegisterModel),EventRegisterModel.$inject=[]}(),function(){"use strict";function LoginController(LoginModel,$state,Users,Message,appStorage){function loginHandler(){Message.loading(),Users.login({},{identifier:LoginModel.form.email,password:LoginModel.form.password}).$promise.then(function(authData){return appStorage.token=authData.token,appStorage.user=authData.user,Users.getMyRole({}).$promise},function(error){throw Message.hide(),Message.alert("로그인 알림","이메일이나 암호가 잘못 되었습니다.").then(function(){LoginModel.form={}}),new Error("loginFail")}).then(function(roleData){appStorage.role=roleData.name,Message.hide(),$state.go("main.home.theme")},function(error){})}var Login=this;Login.Model=LoginModel,Login.loginHandler=loginHandler}angular.module("app").controller("LoginController",LoginController),LoginController.$inject=["LoginModel","$state","Users","Message","appStorage"]}(),function(){"use strict";function LoginModel(){var model={form:{email:null,password:null}};return model}angular.module("app").factory("LoginModel",LoginModel)}(),function(){"use strict";function MainController(MainModel,$ionicSideMenuDelegate,appStorage,Message,$ionicViewSwitcher,$state,$timeout){function goToState(){$ionicViewSwitcher.nextDirection("pop"),$state.go("main.admin"),$timeout(function(){$ionicSideMenuDelegate.toggleLeft(!1)},300)}function toggleSideMenu(){"BAR_ADMIN"===appStorage.role||"HUNGERS_ADMIN"===appStorage.role?Main.isBarAdmin=!0:Main.isBarAdmin=!1,appStorage.token?appStorage.token&&(Main.isLoggedIn=!0):Main.isLoggedIn=!1,$ionicSideMenuDelegate.toggleLeft()}function logOut(){Message.alert("로그아웃 알림","로그아웃 하셨습니다.").then(function(){delete appStorage.role,delete appStorage.user,delete appStorage.token,Main.isLoggedIn=!1})}var Main=this;Main.Model=MainModel,Main.isBarAdmin=!1,Main.isLoggedIn=!1,Main.toggleSideMenu=toggleSideMenu,Main.logOut=logOut,Main.goToState=goToState}angular.module("app").controller("MainController",MainController),MainController.$inject=["MainModel","$ionicSideMenuDelegate","appStorage","Message","$ionicViewSwitcher","$state","$timeout"]}(),function(){"use strict";function MainModel(){var model={};return model}angular.module("app").factory("MainModel",MainModel)}(),function(){"use strict";function AssociationController(AssociationModel,$state,Contacts,Message,appStorage){function formHandler(){return appStorage.role?(Message.loading(),void Contacts.contactAdmin({},formatForm(AssociationModel.form)).$promise.then(function(){AssociationModel.form={},Message.hide(),Message.alert("제휴문의 알림","제휴문의가 성공적으로 접수 되었습니다. 가입하신 이메일로 연락 드리겠습니다.").then(function(){$state.go("main.home.theme")})},function(){Message.hide(),Message.alert("제휴문의 알림","제목과 내용은 필수 사항입니다.")})):Message.alert("제휴문의 알림","로그인/회원가입을 하셔야 합니다.").then(function(){$state.go("login")})}function formatForm(form){var result={};return result.title=form.title,result.content="<br>업체명: "+form.placeName+"<br>전화번호: "+form.phone+"<br>지역: "+form.location+"<br>제목: "+form.title+"<br>내용: "+form.content+"<br>",result}var Association=this;Association.Model=AssociationModel,Association.formHandler=formHandler}angular.module("app").controller("AssociationController",AssociationController),AssociationController=["AssociationModel","$state","Contacts","Message","appStorage"]}(),function(){"use strict";function AssociationModel(){var model={form:{placeName:null,phone:null,location:null,title:null,content:null}};return model}angular.module("app").factory("AssociationModel",AssociationModel)}(),function(){"use strict";function CustomerController(CustomerModel,Contacts,$state,Message,appStorage){function formHandler(){return appStorage.role?(Message.loading(),void Contacts.contactAdmin({},CustomerModel.form).$promise.then(function(){CustomerModel.form={},Message.hide(),Message.alert("고객문의 알림","고객문의가 성공적으로 접수 되었습니다. 가입하신 이메일로 연락 드리겠습니다.").then(function(){$state.go("main.home.theme")})},function(){Message.hide(),Message.alert("고객묵의 알림","제목과 내용은 필수 사항입니다.")})):Message.alert("고객센터 알림","로그인/회원가입을 하셔야 합니다.").then(function(){$state.go("login")})}var Customer=this;Customer.Model=CustomerModel,Customer.formHandler=formHandler}angular.module("app").controller("CustomerController",CustomerController),CustomerController.$inject=["CustomerModel","Contacts","$state","Message","appStorage"]}(),function(){"use strict";function CustomerModel(){var model={form:{email:null,phone:null,title:null,content:null}};return model}angular.module("app").factory("CustomerModel",CustomerModel)}(),function(){"use strict";function EventController(EventModel){var Event=this;Event.Model=EventModel}angular.module("app").controller("EventController",EventController),EventController.$inject=["EventModel"]}(),function(){"use strict";function EventModel(){var model={};return model}angular.module("app").factory("EventModel",EventModel),EventModel.$inject=[]}(),function(){"use strict";function EventDetailController(EventDetailModel,Posts,Message,$stateParams,$scope,$ionicModal,Contacts,appStorage,$state){function onBeforeEnter(){getAPost()}function onAfterEnter(){$ionicModal.fromTemplateUrl("state/mainEventDetail/eventRegisterModal.html",{scope:$scope,animation:"slide-in-up"}).then(function(modal){EventDetail.modal=modal})}function sendForm(){return appStorage.role?EventDetail.isSelected?(EventDetailModel.form.content=EventDetailModel.post.summary,EventDetailModel.form.title=EventDetailModel.post.title,EventDetailModel.form.name&&EventDetailModel.form.contact?(Message.loading(),void Contacts.contactAdmin({},EventDetailModel.form).$promise.then(function(){return EventDetailModel.form={},Posts.likePost({post:EventDetailModel.post.id})},function(){throw new Error("formFail")}).then(function(postWrapper){postWrapper&&postWrapper.posts[0]&&(EventDetailModel.post.likes=postWrapper.posts[0].likes),Message.hide(),Message.alert("이벤트 응모 알림","이벤트 응모가 성공적으로 접수되었습니다. 가입하신 이메일로 연락드리겠습니다.").then(function(){EventDetail.modal.hide()})},function(error){Message.hide(),Message.alert("제휴문의 알림","제목과 내용은 필수 사항입니다.")})):Message.alert("이벤트 응모 알림","이름과 연락처를 넣어주세요")):Message.alert("이벤트 응모 알림","약관에 동의 하여 주세요."):Message.alert("이벤트 응모 알림","로그인/회원가입을 하셔야 합니다.").then(function(){EventDetail.modal.hide(),$state.go("login")})}function getAPost(){Message.loading(),Posts.findById({id:$stateParams.id,populates:"photos"}).$promise.then(function(postWrapper){EventDetailModel.post=postWrapper.post,Message.hide()},function(error){Message.hide(),Message.alert("공지사항 알림","없는 공지사항 입니다")})}var EventDetail=this;EventDetail.Model=EventDetailModel,EventDetail.isSelected=!1,EventDetail.showTerms=!1,EventDetail.sendForm=sendForm,$scope.$on("$ionicView.beforeEnter",onBeforeEnter),$scope.$on("$ionicView.afterEnter",onAfterEnter)}angular.module("app").controller("EventDetailController",EventDetailController),EventDetailController.$inject=["EventDetailModel","Posts","Message","$stateParams","$scope","$ionicModal","Contacts","appStorage","$state"]}(),function(){"use strict";function EventDetailModel(){var model={post:{},form:{title:"",content:"",name:"",contact:""}};return model}angular.module("app").factory("EventDetailModel",EventDetailModel),EventDetailModel.$inject=[]}(),function(){"use strict";function HomeController(HomeModel){var Home=this;Home.Model=HomeModel}angular.module("app").controller("HomeController",HomeController),HomeController=["HomeModel"]}(),function(){"use strict";function HomeModel(){var model={};return model}angular.module("app").factory("HomeModel",HomeModel)}(),function(){"use strict";function EventListController(EventListModel,Posts,$stateParams,Message,$scope){function onBeforeEnter(){"hungersEvent"===$stateParams.eventType?category="HUNGERS-EVENT-POST":"barEvent"===$stateParams.eventType&&(category="LIQUOR-EVENT-POST"),getPosts(category)}function getOlderPosts(){"hungersEvent"===$stateParams.eventType?category="HUNGERS-EVENT-POST":"barEvent"===$stateParams.eventType&&(category="LIQUOR-EVENT-POST");var currentPosts=EventListModel.posts;Posts.getPosts({category:category,sort:"id DESC",limit:5,populates:"photos",olderThan:currentPosts[currentPosts.length-1].id}).$promise.then(function(postsWrapper){postsWrapper.posts.forEach(function(post){currentPosts.push(post)}),$scope.$broadcast("scroll.infiniteScrollComplete"),EventListModel.more=postsWrapper.more},function(error){Message.alert(),$scope.$broadcast("scroll.infiniteScrollComplete")})}function getPosts(category){return EventListModel.posts.length<5?(Message.loading(),Posts.getPosts({category:category,sort:"id DESC",limit:5,populates:"photos"}).$promise.then(function(postsWrapper){EventListModel.posts=postsWrapper.posts,EventListModel.more=postsWrapper.more,Message.hide()},function(error){Message.alert(),Message.hide()})):void 0}function onBeforeLeave(){EventListModel.posts.length=0}var category="",EventList=this;EventList.Model=EventListModel,EventList.getOlderPosts=getOlderPosts,$scope.$on("$ionicView.beforeEnter",onBeforeEnter),$scope.$on("$ionicView.beforeLeave",onBeforeLeave)}angular.module("app").controller("EventListController",EventListController),EventListController.$inject=["EventListModel","Posts","$stateParams","Message","$scope"]}(),function(){"use strict";function EventListModel(){var model={posts:[]};return model}angular.module("app").factory("EventListModel",EventListModel)}(),function(){"use strict";function LocationController(LocationModel,$cordovaGeolocation,Message,$scope,gpsService){var Location=this;Location.Model=LocationModel,$scope.$on("$ionicView.enter",function(){gpsService.checkGPS()})}angular.module("app").controller("LocationController",LocationController),LocationController.$inject=["LocationModel","$cordovaGeolocation","Message","$scope","gpsService"]}(),function(){"use strict";function LocationModel(){var model={};return model}angular.module("app").factory("LocationModel",LocationModel)}(),function(){"use strict";function ThemeController(ThemeModel,$scope,Message,$cordovaGeolocation,gpsService){var Theme=this;Theme.Model=ThemeModel,$scope.$on("$ionicView.enter",function(){gpsService.checkGPS()})}angular.module("app").controller("ThemeController",ThemeController),ThemeController.$inject=["ThemeModel","$scope","Message","$cordovaGeolocation","gpsService"]}(),function(){"use strict";function ThemeModel(){var model={};return model}angular.module("app").factory("ThemeModel",ThemeModel)}(),function(){"use strict";function TypeController(TypeModel,Message,$cordovaGeolocation,$scope,gpsService){var Type=this;Type.Model=TypeModel,$scope.$on("$ionicView.enter",function(){gpsService.checkGPS()})}angular.module("app").controller("TypeController",TypeController),TypeController.$inject=["TypeModel","Message","$cordovaGeolocation","$scope","gpsService"]}(),function(){"use strict";function TypeModel(){var model={};return model}angular.module("app").factory("TypeModel",TypeModel)}(),function(){"use strict";function NoticeDetailController(NoticeDetailModel,$scope,Message,Places,$stateParams,Posts){function onBeforeEnter(){getAPost()}function getAPost(){Message.loading(),Posts.get({id:$stateParams.id,populates:"photos"}).$promise.then(function(postWrapper){NoticeDetailModel.post=postWrapper.post,Message.hide()},function(error){Message.hide(),Message.alert("공지사항 알림","없는 공지사항 입니다")})}var NoticeDetail=this;NoticeDetail.Model=NoticeDetailModel,$scope.$on("$ionicView.beforeEnter",onBeforeEnter)}angular.module("app").controller("NoticeDetailController",NoticeDetailController),NoticeDetailController.$inject=["NoticeDetailModel","$scope","Message","Places","$stateParams","Posts"]}(),function(){"use strict";function NoticeDetailModel(){var model={currentPlace:{title:"헝거스 소비자 약관 변경 안내",createdAt:new Date}};return model}angular.module("app").factory("NoticeDetailModel",NoticeDetailModel)}(),function(){"use strict";function NoticeListController(NoticeListModel,Posts,$state,$scope,Message){function getNewerPosts(){var currentPosts=NoticeListModel.postsWrapper.posts;return Posts.getPosts({category:"NOTICE-POST",limit:10,newerThan:currentPosts[0].id}).$promise.then(function(data){data.posts.length||Message.alert("새로운포스트가 없습니다","나중에 다시 확인해주세요"),data.posts.forEach(function(post){currentPosts.unshift(post)}),$scope.$broadcast("scroll.refreshComplete")},function(error){Message.alert(),$scope.$broadcast("scroll.refreshComplete")})}function getOlderPosts(){var currentPosts=NoticeListModel.postsWrapper.posts;Posts.getPosts({category:"NOTICE-POST",sort:"id DESC",limit:10,olderThan:currentPosts[currentPosts.length-1].id}).$promise.then(function(data){data.posts.forEach(function(post){currentPosts.push(post)}),$scope.$broadcast("scroll.infiniteScrollComplete"),NoticeListModel.postsWrapper.more=data.more},function(error){Message.alert(),$scope.$broadcast("scroll.infiniteScrollComplete")})}function onBeforeEnter(){return NoticeListModel.postsWrapper.posts.length<10?(Message.loading(),Posts.getPosts({category:"NOTICE-POST",sort:"id DESC",limit:10}).$promise.then(function(data){NoticeListModel.postsWrapper=data,Message.hide()},function(error){Message.alert(),Message.hide()})):void 0}function checkForMore(){return NoticeListModel.postsWrapper.more}var NoticeList=this;NoticeList.Model=NoticeListModel,NoticeList.getNewerPosts=getNewerPosts,NoticeList.getOlderPosts=getOlderPosts,NoticeList.checkForMore=checkForMore,$scope.$on("$ionicView.beforeEnter",onBeforeEnter)}angular.module("app").controller("NoticeListController",NoticeListController),NoticeListController.$inject=["NoticeListModel","Posts","$state","$scope","Message"]}(),function(){"use strict";function NoticeListModel(){var model={postsWrapper:{posts:[{title:"헝거스 약관변경안내",content:"",createdAt:new Date,category:"",comments:[],photos:[{url:""}]}],more:!1}};return model}angular.module("app").factory("NoticeListModel",NoticeListModel)}(),function(){"use strict";function PlaceController(PlaceModel,Dom,$ionicHistory,$scope,$stateParams,$state,_,$ionicScrollDelegate,appStorage){function menuSelectHandler(arrayData,ionicScrollHandle,$index,item){appStorage.scrollPositionY=0,$state.go("main.place.list",{from:item.params.from}),PlaceModel.currentItem=item}function getParams(param){return $state.params[param]}function isLocation(){return"north"===$state.params.category||"south"===$state.params.category}function onAfterEnter(){"theme"===$stateParams.category?(PlaceModel.currentCategory=PlaceModel.from.theme.category,angular.forEach(PlaceModel.currentCategory,function(obj){var category=obj.params.from;category===$state.params.from&&(PlaceModel.currentItem=obj)})):"type"===$stateParams.category?(PlaceModel.currentCategory=PlaceModel.from.type.category,angular.forEach(PlaceModel.currentCategory,function(obj){var category=obj.params.from;category===$state.params.from&&(PlaceModel.currentItem=obj)})):("north"===$stateParams.category||"south"===$stateParams.category)&&(PlaceModel.currentCategory=PlaceModel.from.location.category,angular.forEach(PlaceModel.currentCategory,function(obj){var category=obj.params.from;category===$state.params.from&&(PlaceModel.currentItem=obj)})),moveIonScrollToCurrentIndex(PlaceModel.currentCategory)}function moveIonScrollToCurrentIndex(array){var currentIndex=_.pluck(_.pluck(PlaceModel.currentCategory,"params"),"from").indexOf($state.params.from);Dom.menuScroller(array,currentIndex,$ionicScrollDelegate),PlaceModel.currentItem=array[currentIndex]}var Place=this;Place.Model=PlaceModel,Place.menuSelectHandler=menuSelectHandler,Place.getParams=getParams,Place.isLocation=isLocation,$scope.$on("$ionicView.afterEnter",onAfterEnter)}angular.module("app").controller("PlaceController",PlaceController),PlaceController.$inject=["PlaceModel","Dom","$ionicHistory","$scope","$stateParams","$state","_","$ionicScrollDelegate","appStorage"]}(),function(){"use strict";function PlaceModel(){var model={from:{theme:{category:[{name:"헌팅",summary:"실시간 남녀성비가 제공되는 가장 Hot 한 헌팅 주점",params:{from:"hunting",category:"theme"},vw:18.6},{name:"데이트",summary:"연인 혹은 썸남썸녀를 위한 낭만적이고 로맨틱한 분위기의 주점",params:{from:"romance",category:"theme"},vw:18.6},{name:"친구",summary:"편안한 사람들과 부담 없이 한잔할 수 있는 주점",params:{from:"friends",category:"theme"},vw:18.6},{name:"이색",summary:"취향저격! 특별하고 유쾌한 이색 주점",params:{from:"unique",category:"theme"},vw:18.6},{name:"안주",summary:"특별한 안주와 곁들이면 맛과 분위기가 배가 되는 다이닝 주점",params:{from:"dishes",category:"theme"},vw:18.6},{name:"감성",summary:"추억을 자극하는 복고풍 분위기의 주점",params:{from:"eighties",category:"theme"},vw:18.6}]},type:{category:[{name:"호프/포차",summary:"젊은 감성의 아지트, 한국식 소주 호프 & 포차",params:{from:"pocha",category:"type"},vw:27},{name:"PUB",summary:"이국적인 분위기에서 다양한 주류 및 안주를 즐길 수 있는 서양식 주점",params:{from:"pub",category:"type"},vw:18.6},{name:"이자카야",summary:"맛, 술, 분위기 삼위일체의 정통 일본식 선술집",params:{from:"izakaya",category:"type"},vw:25},{name:"BAR",summary:"특별한 데이트 혹은 친구들과의 특별한 만남을 위한 주점",params:{from:"lounge",category:"type"},vw:18.6},{name:"맥주",summary:"늦은 저녁 힘든 일과를 마치고 가볍게 한잔할 수 있는 맥주 전문점",params:{from:"beer",category:"type"},vw:18.6},{name:"민속/퓨전",summary:"비오는 날 생각나는 파전 & 막걸리 또는 특색 있는 안주의 향연이 있는 민속 & 퓨전 주점",params:{from:"fusion",category:"type"},vw:25}]},location:{category:[{name:"홍대입구",summary:"",params:{from:"hongdea",category:"north"},vw:25},{name:"이태원",summary:"",params:{from:"etehwon",category:"north"},vw:22},{name:"건대입구",summary:"",params:{from:"gundeaentrance",category:"north"},vw:25},{name:"경리단길",summary:"",params:{from:"gyungridangil",category:"north"},vw:25},{name:"강남",summary:"",params:{from:"gangnam",category:"south"},vw:18.6},{name:"신논현",summary:"",params:{from:"sinnonhyun",category:"south"},vw:22},{name:"가로수길",summary:"",params:{from:"garohsoogil",category:"south"},vw:25},{name:"신림",summary:"",params:{from:"shinrim",category:"south"},vw:18.6}]}},currentCategory:[],currentItem:{}};return model}angular.module("app").factory("PlaceModel",PlaceModel)}(),function(){"use strict";function DetailController(DetailModel,$stateParams,$scope,Message,Places,$ionicSlideBoxDelegate,$window,$ionicModal,Posts,appStorage,moment,$rootScope,$ionicHistory,$q,$ionicScrollDelegate){function goBack(){appStorage.isBackViewDetail=!0,$ionicHistory.goBack()}function hasPopularMenu(){var hasFood=Detail.Model.current.popularFood&&Detail.Model.current.popularFood[0].name,hasDrink=Detail.Model.current.popularDrink&&Detail.Model.current.popularDrink[0].name;return hasFood||hasDrink?!0:!1}function hasSexPercentage(){var hasMale=Detail.Model.current.male,hasFemale=Detail.Model.current.female;
return hasMale||hasFemale?!0:!1}function isHuntingBar(){return-1!==DetailModel.current.tags.indexOf("헌팅")}function isLoggedIn(){return!!appStorage.role}function callPhone(){$window.location.href="tel:"+DetailModel.current.phone}function openReview(){$window.open(DetailModel.current.reviewUrl,"_system")}function showMenu(){Detail.modal.show()}function onBeforeEnter(){$ionicScrollDelegate.$getByHandle("placeDetail").scrollTop(),Detail.showPhotos=!1,$rootScope.isTransitioning=!0,reset();var loadPromise=loadPlace();getPostsByPlaceId($stateParams.id),Detail.month=moment().month()+1,Detail.week=Math.ceil(moment().date()/7);var deferred=$q.defer();return deferred.resolve(loadPromise),deferred.promise.then(function(){$ionicSlideBoxDelegate.update(),$ionicSlideBoxDelegate.slide(0,0),$ionicSlideBoxDelegate.enableSlide(!0)})}function onAfterEnter(){Detail.showPhotos=!0}function onEnter(){}function onBeforeLeave(){$ionicSlideBoxDelegate.slide(0,0),$ionicSlideBoxDelegate.update()}function reset(){DetailModel.current={},DetailModel.current.photos=[],DetailModel.current.openingHours=[],DetailModel.current.tags=[]}function loadPlace(){return Message.loading(),Places.findById({id:$stateParams.id,populates:"photos,products"}).$promise.then(function(place){DetailModel.current=place,Message.hide()},function(error){Message.alert("주점 알림","요청하신 주점은 없는 주점입니다.")})}function getPostsByPlaceId(id){return Message.loading(),Posts.getPosts({place:id}).$promise.then(function(postsWrapper){DetailModel.posts=postsWrapper.posts},function(error){})}var Detail=this;Detail.Model=DetailModel,Detail.callPhone=callPhone,Detail.showMenu=showMenu,Detail.openReview=openReview,Detail.isLoggedIn=isLoggedIn,Detail.isHuntingBar=isHuntingBar,Detail.hasPopularMenu=hasPopularMenu,Detail.hasSexPercentage=hasSexPercentage,Detail.goBack=goBack,$scope.$on("$ionicView.beforeEnter",onBeforeEnter),$scope.$on("$ionicView.enter",onEnter),$scope.$on("$ionicView.afterEnter",onAfterEnter),$scope.$on("$ionicView.beforeLeave",onBeforeLeave),$ionicModal.fromTemplateUrl("state/mainPlaceDetail/menuModal.html",{scope:$scope,animation:"slide-in-up"}).then(function(modal){Detail.modal=modal})}angular.module("app").controller("DetailController",DetailController),DetailController.$inject=["DetailModel","$stateParams","$scope","Message","Places","$ionicSlideBoxDelegate","$window","$ionicModal","Posts","appStorage","moment","$rootScope","$ionicHistory","$q","$ionicScrollDelegate"]}(),function(){"use strict";function DetailModel(){var model={current:{photos:[],name:"",address:"",openingHours:[],table:0,male:"",female:"",summary:"",tags:[],updatedAt:""},posts:[]};return model}angular.module("app").factory("DetailModel",DetailModel)}(),function(){"use strict";function PlaceListController(PlaceListModel,PlaceModel,Places,$state,$scope,$stateParams,Message,$cordovaGeolocation,Distance,$ionicScrollDelegate,appStorage,$ionicViewSwitcher){function goHomeState(){$ionicViewSwitcher.nextDirection("back"),"theme"===$state.params.category?$state.go("main.home.theme"):"type"===$state.params.category?$state.go("main.home.type"):("north"===$state.params.category||"south"===$state.params.category)&&$state.go("main.home.location")}function goToState(place){var scrollPos=$ionicScrollDelegate.$getByHandle("placeList").getScrollPosition();appStorage.scrollPositionY=scrollPos.top,$state.go("main.detail",{id:place.id})}function getFurtherPlaces(){getNextPlacesWithinWithTags({tags:[$stateParams.from]})}function checkForMore(){return PlaceListModel.more}function onBeforeEnter(){Message.loading(),getPlacesWithinWithTags({tags:[$stateParams.from]})}function getPlacesWithinWithTags(tagsObj){if(appStorage.isBackViewDetail)return appStorage.isBackViewDetail=!1,Message.hide(),!1;PlaceListModel.places=[],PlaceListModel.more=!1;var tagsArray=tagsObj.tags,tagsArrayKorean=mapTagsToKorean(tagsArray),tagsCSVInKorean=tagsArrayKorean.join(",");$cordovaGeolocation.getCurrentPosition({maximumAge:6e5,timeout:5e3}).then(function(position){return null==position.coords?(Message.hide(),Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요."),!1):Places.getPlacesWithin({latitude:position.coords.latitude,longitude:position.coords.longitude,distance:3e5,limit:4,tags:tagsCSVInKorean,populates:"photos"}).$promise.then(function(placesWrapper){PlaceListModel.currentLocation=[position.coords.longitude,position.coords.latitude],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceListModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),PlaceListModel.places=placesWrapper.places,PlaceListModel.more=placesWrapper.more,Message.hide(),$ionicScrollDelegate.$getByHandle("placeList").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){Message.hide(),Message.alert()})},function(err){PlaceListModel.places=[],PlaceListModel.more=!1,Message.hide(),Places.getPlacesWithin({latitude:37.498085435791786,longitude:127.02800027507125,distance:3e5,limit:4,tags:tagsCSVInKorean,populates:"photos"}).$promise.then(function(placesWrapper){PlaceListModel.more=placesWrapper.more,PlaceListModel.currentLocation=[127.02800027507125,37.498085435791786],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceListModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),PlaceListModel.places=placesWrapper.places,Message.hide(),$ionicScrollDelegate.$getByHandle("placeList").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){Message.hide(),Message.alert()})})}function getNextPlacesWithinWithTags(tagsObj){var tagsArray=tagsObj.tags,tagsArrayKorean=mapTagsToKorean(tagsArray),tagsCSVInKorean=tagsArrayKorean.join(",");$cordovaGeolocation.getCurrentPosition({maximumAge:6e5,timeout:5e3}).then(function(position){return null==position.coords?(Message.hide(),Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요."),!1):Places.getPlacesWithin({latitude:position.coords.latitude,longitude:position.coords.longitude,distance:3e5,skip:PlaceList.Model.places.length,limit:4,tags:tagsCSVInKorean,populates:"photos"}).$promise.then(function(placesWrapper){PlaceListModel.more=placesWrapper.more,PlaceListModel.currentLocation=[position.coords.longitude,position.coords.latitude],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceListModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),angular.forEach(placesWrapper.places,function(place){PlaceListModel.places.push(place)}),Message.hide(),$ionicScrollDelegate.$getByHandle("placeList").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){})},function(err){return Message.hide(),Places.getPlacesWithin({latitude:37.498085435791786,longitude:127.02800027507125,distance:3e5,skip:PlaceListModel.places.length,limit:4,tags:tagsCSVInKorean,populates:"photos"}).$promise.then(function(placesWrapper){PlaceListModel.more=placesWrapper.more,PlaceListModel.currentLocation=[127.02800027507125,37.498085435791786],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceListModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),angular.forEach(placesWrapper.places,function(place){PlaceListModel.places.push(place)}),Message.hide(),$ionicScrollDelegate.$getByHandle("placeList").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){})})}function distanceFromCurrentLocation(currentCoord,placeCoord){var p1={longitude:currentCoord[1],latitude:currentCoord[0]},p2={longitude:placeCoord[1],latitude:placeCoord[0]},distanceInMeters=Distance.between(p1,p2);return distanceInMeters}function mapTagsToKorean(englishTags){for(var mapperObjs=[{korean:"헌팅",english:"hunting"},{korean:"감성",english:"eighties"},{korean:"데이트",english:"romance"},{korean:"친구",english:"friends"},{korean:"이색",english:"unique"},{korean:"안주",english:"dishes"},{korean:"호프/포차",english:"pocha"},{korean:"PUB",english:"pub"},{korean:"이자카야",english:"izakaya"},{korean:"맥주",english:"beer"},{korean:"민속/퓨전",english:"fusion"},{korean:"BAR",english:"lounge"},{korean:"홍대",english:"hongdea"},{korean:"이태원",english:"etehwon"},{korean:"건대입구",english:"gundeaentrance"},{korean:"경리단길",english:"gyungridangil"},{korean:"강남",english:"gangnam"},{korean:"신논현",english:"sinnonhyun"},{korean:"가로수길",english:"garohsoogil"},{korean:"신림",english:"shinrim"}],i=0;i<mapperObjs.length;i++)for(var english=mapperObjs[i].english,korean=mapperObjs[i].korean,j=0;j<englishTags.length;j++){var englishTag=englishTags[j];englishTag===english&&englishTags.splice(j,1,korean)}var convertedTagsArray=englishTags;return convertedTagsArray}var PlaceList=this;PlaceList.Model=PlaceListModel,PlaceList.getFurtherPlaces=getFurtherPlaces,PlaceList.checkForMore=checkForMore,PlaceList.goToState=goToState,PlaceList.goHomeState=goHomeState,$scope.$on("$ionicView.beforeEnter",onBeforeEnter)}angular.module("app").controller("PlaceListController",PlaceListController),PlaceListController.$inject=["PlaceListModel","PlaceModel","Places","$state","$scope","$stateParams","Message","$cordovaGeolocation","Distance","$ionicScrollDelegate","appStorage","$ionicViewSwitcher"]}(),function(){"use strict";function PlaceListModel(){var model={places:[],more:!1};return model}angular.module("app").factory("PlaceListModel",PlaceListModel)}(),function(){"use strict";function PlaceSearchController(PlaceSearchModel,PlaceModel,Places,$state,$scope,$stateParams,Message,$cordovaGeolocation,Distance,$ionicScrollDelegate,daum){function getFurtherPlaces(){if("address"===lastSearchType)return getNextPlacesWithinByLocation(PlaceSearch.search);if("placeName"===lastSearchType)return getNextPlacesWithinByName(PlaceSearch.search);if("tag"===lastSearchType){var valueObj={tags:[PlaceSearch.search]};return getNextPlacesWithinWithTags(valueObj)}}function checkForMore(){return PlaceSearchModel.more}function onBeforeEnter(){lastSearchType=""}function onLeave(){lastSearchType=""}function searchLocationNearBy(value){$ionicScrollDelegate.$getByHandle("placeSearch").scrollTop(!1),Message.loading(),lastSearchType="tag";var valueObj={tags:[value]};return getPlacesWithinWithTags(valueObj)}function setPlaceholderText(){return"address"===PlaceSearch.searchType?"지역을 입력해주세요":"placeName"===PlaceSearch.searchType?"주점명을 입력해주세요":"tag"===PlaceSearch.searchType?"키워드를 입력해주세요":void 0}function getNextPlacesWithinByLocation(value){var ps=new daum.maps.services.Places;ps.keywordSearch(value,function(status,data){return void 0===data.places[0]?(Message.hide(),Message.alert("요청하신 장소가 없습니다","다시검색해주세요"),!1):Places.getPlacesWithin({latitude:data.places[0].latitude,longitude:data.places[0].longitude,distance:3e5,skip:PlaceSearchModel.places.length,limit:4,populates:"photos"}).$promise.then(function(placesWrapper){$cordovaGeolocation.getCurrentPosition({maximumAge:6e5,timeout:5e3}).then(function(position){PlaceSearchModel.currentLocation=[position.coords.longitude,position.coords.latitude],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceSearchModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),angular.forEach(placesWrapper.places,function(place){PlaceSearchModel.places.push(place)}),PlaceSearchModel.more=placesWrapper.more,Message.hide(),$ionicScrollDelegate.$getByHandle("placeSearch").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){Message.hide(),Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요.")})},function(error){})},function(err){Message.hide(),Message.alert()})}function getNextPlacesWithinByName(name){$cordovaGeolocation.getCurrentPosition({maximumAge:6e5,timeout:5e3}).then(function(position){return null==position.coords?(Message.hide(),Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요."),!1):Places.getPlacesWithin({latitude:position.coords.latitude,longitude:position.coords.longitude,distance:3e5,skip:PlaceSearch.Model.places.length,limit:4,filter:name,populates:"photos"}).$promise.then(function(placesWrapper){PlaceSearchModel.currentLocation=[position.coords.longitude,position.coords.latitude],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceSearchModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),angular.forEach(placesWrapper.places,function(place){PlaceSearchModel.places.push(place)}),PlaceSearchModel.more=placesWrapper.more,Message.hide(),$ionicScrollDelegate.$getByHandle("placeSearch").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){})},function(error){return Message.hide(),Places.getPlacesWithin({longitude:127.02800027507125,latitude:37.498085435791786,distance:3e5,skip:PlaceSearch.Model.places.length,limit:4,filter:name,populates:"photos"}).$promise.then(function(placesWrapper){PlaceSearchModel.currentLocation=[127.02800027507125,37.498085435791786],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceSearchModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),angular.forEach(placesWrapper.places,function(place){PlaceSearchModel.places.push(place)}),PlaceSearchModel.more=placesWrapper.more,Message.hide(),$ionicScrollDelegate.$getByHandle("placeSearch").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){})})}function getPlacesWithinWithTags(tagsObj){var tagsArray=tagsObj.tags,tagsArrayKorean=mapTagsToKorean(tagsArray),tagsCSVInKorean=tagsArrayKorean.join(",");$cordovaGeolocation.getCurrentPosition({maximumAge:6e5,timeout:5e3}).then(function(position){return null==position.coords?(Message.hide(),Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요."),!1):Places.getPlacesWithin({latitude:position.coords.latitude,longitude:position.coords.longitude,distance:3e5,limit:4,tags:tagsCSVInKorean,populates:"photos"}).$promise.then(function(placesWrapper){PlaceSearchModel.currentLocation=[position.coords.longitude,position.coords.latitude],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceSearchModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),PlaceSearchModel.places=placesWrapper.places,PlaceSearchModel.more=placesWrapper.more,Message.hide(),$ionicScrollDelegate.$getByHandle("placeSearch").resize()},function(error){})},function(err){return Message.hide(),Places.getPlacesWithin({longitude:127.02800027507125,latitude:37.498085435791786,distance:3e5,limit:4,tags:tagsCSVInKorean,populates:"photos"}).$promise.then(function(placesWrapper){PlaceSearchModel.currentLocation=[127.02800027507125,37.498085435791786],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceSearchModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),PlaceSearchModel.places=placesWrapper.places,PlaceSearchModel.more=placesWrapper.more,Message.hide(),$ionicScrollDelegate.$getByHandle("placeSearch").resize()},function(error){})}),Message.hide()}function getNextPlacesWithinWithTags(tagsObj){var tagsArray=tagsObj.tags,tagsArrayKorean=mapTagsToKorean(tagsArray),tagsCSVInKorean=tagsArrayKorean.join(",");$cordovaGeolocation.getCurrentPosition({maximumAge:6e5,timeout:5e3}).then(function(position){return null==position.coords?(Message.hide(),Message.alert("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요."),!1):Places.getPlacesWithin({latitude:position.coords.latitude,longitude:position.coords.longitude,distance:3e5,skip:PlaceSearch.Model.places.length,limit:4,tags:tagsCSVInKorean,populates:"photos"}).$promise.then(function(placesWrapper){PlaceSearchModel.currentLocation=[position.coords.longitude,position.coords.latitude],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceSearchModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),angular.forEach(placesWrapper.places,function(place){PlaceSearchModel.places.push(place)}),PlaceSearchModel.more=placesWrapper.more,Message.hide(),$ionicScrollDelegate.$getByHandle("placeSearch").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){})},function(err){return Message.hide(),Places.getPlacesWithin({longitude:127.02800027507125,latitude:37.498085435791786,distance:3e5,skip:PlaceSearch.Model.places.length,limit:4,tags:tagsCSVInKorean,populates:"photos"}).$promise.then(function(placesWrapper){PlaceSearchModel.currentLocation=[127.02800027507125,37.498085435791786],angular.forEach(placesWrapper.places,function(place){var distanceInMeters=distanceFromCurrentLocation(PlaceSearchModel.currentLocation,place.location.coordinates);place.distanceFromCurrent=distanceInMeters}),angular.forEach(placesWrapper.places,function(place){PlaceSearchModel.places.push(place)}),PlaceSearchModel.more=placesWrapper.more,Message.hide(),$ionicScrollDelegate.$getByHandle("placeSearch").resize(),$scope.$broadcast("scroll.infiniteScrollComplete")},function(error){})})}function distanceFromCurrentLocation(currentCoord,placeCoord){var p1={longitude:currentCoord[1],latitude:currentCoord[0]},p2={longitude:placeCoord[1],latitude:placeCoord[0]},distanceInMeters=Distance.between(p1,p2);return distanceInMeters}function mapTagsToKorean(englishTags){for(var mapperObjs=[{korean:"헌팅",english:"hunting"},{korean:"감성",english:"eighties"},{korean:"데이트",english:"romance"},{korean:"친구",english:"friends"},{korean:"이색",english:"unique"},{korean:"안주",english:"dishes"},{korean:"호프/포차",english:"pocha"},{korean:"PUB",english:"pub"},{korean:"이자카야",english:"izakaya"},{korean:"맥주",english:"beer"},{korean:"민속/퓨전",english:"fusion"},{korean:"BAR",english:"lounge"},{korean:"홍대",english:"hongdea"},{korean:"이태원",english:"etehwon"},{korean:"건대입구",english:"gundeaentrance"},{korean:"경리단길",english:"gyungridangil"},{korean:"강남",english:"gangnam"},{korean:"신논현",english:"sinnonhyun"},{korean:"가로수길",english:"garohsoogil"},{korean:"신림",english:"shinrim"}],i=0;i<mapperObjs.length;i++)for(var english=mapperObjs[i].english,korean=mapperObjs[i].korean,j=0;j<englishTags.length;j++){var englishTag=englishTags[j];englishTag===english&&englishTags.splice(j,1,korean)}var convertedTagsArray=englishTags;return convertedTagsArray}var PlaceSearch=this;PlaceSearch.Model=PlaceSearchModel;var lastSearchType="";PlaceSearch.searchType="tag",PlaceSearch.getFurtherPlaces=getFurtherPlaces,PlaceSearch.checkForMore=checkForMore,PlaceSearch.searchLocationNearBy=searchLocationNearBy,PlaceSearch.setPlaceholderText=setPlaceholderText,$scope.$on("$ionicView.beforeEnter",onBeforeEnter),$scope.$on("$ionicView.leave",onLeave)}angular.module("app").controller("PlaceSearchController",PlaceSearchController),PlaceSearchController.$inject=["PlaceSearchModel","PlaceModel","Places","$state","$scope","$stateParams","Message","$cordovaGeolocation","Distance","$ionicScrollDelegate","daum"]}(),function(){"use strict";function PlaceSearchModel(){var model={places:[],more:!1};return model}angular.module("app").factory("PlaceSearchModel",PlaceSearchModel)}(),function(){"use strict";function SignupController(SignupModel,Users,$scope,$state,Message,$timeout){function setSex(sex){Signup.Model.form.sex=sex}function checkDuplicateNickname(nickname){Message.loading(),Users.checkNickname({nickname:nickname}).$promise.then(function(data){Message.hide(),data.isAvailable?(Message.alert("닉네임 알림","사용가능한 닉네임 입니다"),SignupModel.nickNameChecked=!0):(Message.alert("닉네임 알림","이미 사용중인 닉네임입니다, 다른 닉네임을 써주세요."),SignupModel.form.nickname=null,SignupModel.nickNameChecked=!1)},function(error){Message.hide()})}function registerationHandler(){return SignupModel.form.password!==SignupModel.form.passwordConfirm?Message.alert("비밀번호 알림","비밀번호를 다시 한번 확인해주시고 입력해주세요"):void Users.register({},SignupModel.form).$promise.then(function(data){angular.copy({birthYear:null},SignupModel.form),Message.alert("회원가입 성공","회원가입을 성공하였습니다.").then(function(res){$state.go("login")})},function(error){Message.hide(),Message.alert("가입실패","다시 입력해주세요")})}function onAfterEnter(){$timeout(function(){angular.copy({email:null,nickname:null,password:null,passwordConfirm:null,birthYear:null,sex:null},SignupModel.form),SignupModel.form.birthYear=null},0)}var Signup=this;Signup.Model=SignupModel,Signup.setSex=setSex,Signup.checkDuplicateNickname=checkDuplicateNickname,Signup.registerationHandler=registerationHandler,SignupModel.form.birthYear=null,$scope.$on("$ionicView.enter",onAfterEnter),$scope.$on("$ionicView.leave",onAfterEnter)}angular.module("app").controller("SignupController",SignupController),SignupController.$inject=["SignupModel","Users","$scope","$state","Message","$timeout"]}(),function(){"use strict";function SignupModel(_,moment){var currentYear=moment().year(),years=_.range(currentYear-90,currentYear+1-18,1);years=angular.forEach(years,function(year){return String(year)});var model={years:years,form:{email:null,nickname:null,password:null,passwordConfirm:null,birthYear:null,sex:null},nickNameChecked:!1};return model}angular.module("app").factory("SignupModel",SignupModel),SignupModel.$inject=["_","moment"]}();